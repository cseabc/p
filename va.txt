//VECTOR ADDDITION
#include <stdio.h>
#include <omp.h>
#define N 4

int main() {
    int A[N][N], x[N], y[N] = {0};

    // Initialize matrix A and vector x
    for (int i = 0; i < N; i++) {
        x[i] = i + 1;
        for (int j = 0; j < N; j++) A[i][j] = (i + 1) * (j + 1);
    }

    // Display matrix A and vector x
    printf("Matrix A:\n");
    for (int i = 0; i < N; i++) { for (int j = 0; j < N; j++) printf("%d ", A[i][j]); printf("\n"); }
    printf("Vector x:\n"); for (int i = 0; i < N; i++) printf("%d ", x[i]); printf("\n");

    // Matrix addition with vector x
    double start = omp_get_wtime();
    #pragma omp parallel for
    for (int i = 0; i < N; i++) for (int j = 0; j < N; j++) y[i] += A[i][j];
    for (int i = 0; i < N; i++) y[i] += x[i];
    printf("Time taken: %f seconds\n", omp_get_wtime() - start);

    // Display result vector y
    printf("Result y:\n"); for (int i = 0; i < N; i++) printf("%d ", y[i]);
    return 0;
}